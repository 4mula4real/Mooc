1 +1
1+1
chooseCRANmirror()
q()
install.packages(â€œbibliometrixâ€? dependencies=TRUE)
install.packages(â€œbibliometrixâ€? dependencies=TRUE)
install.packages("bibliometrix", dependencies=TRUE)
library(bibliometrix)
biblioshiny()
install.packages("dplyr")
install.packages("tidytext")
install.packages("tidyr")
install.packages("ggplot2")
install.packages("rmarkdown")
install.packages("reshape2")
install.packages("plyr")
install.packages("dplyr")
install.packages("stringr")
install.packages("tidyverse")
install.packages("psych")
install.packages("forecast")
library(bibliometrix)
biblioshiny()
biblioshiny()
biblioshiny()
biblioshiny()
biblioshiny()
biblioshiny()
plot()
plot([1,2,3])
swirl()
library("swirl")
swirl()
library("swirl")
swirl()
5+7
x <- 5 + 7
x
y <- x-3
y
c(1.1, 9, 3,14)
z <- c(1.1, 9, 3,14)
z <- c(1.1, 9, 3.14)
?c
z
c(z,555)
c(z, 555, z)
z * 2 + 100
my_sqrt = sqrt(z - 1)
my_sqrt <- sqrt(z - 1)
my_sqrt
my_div = z / my_sqrt
my_div <- z / my_sqrt
my_div
c(1, 2, 3, 4) + c(0,10)
c(1,2,3,4) + c(0,10,100)
z * 2 + 100
z * 2 + 100
(z * 2 + 100)
z * 2 + 1000
my_div
getwd()
ls()
x <- 9
ls()
dir()
?list.files
args(list.files)
ew
1 +1
old.dir <- getwd()
dir.create("testdir")
setwd("testdir")
file.create("mytest.R")
ls()
list.files()
file.exists(mytest.r)
file.exists(mytest.R)
file.exists("mytest.R")
file.info("mytest.R")
file.rename("mytest.R", "mytest2.R")
file.copy("mytest2.R", "mytest3.R")
file.path("mytest3.R")
1
file.path("folder1", "folder2")
?dir.create
dir.create(file.path("testdir2", "testdir2"))
dir.create(file.path("testdir2", "testdir3"))
dir.create(file.path("testdir2", "testdir3"), recursive = True)
dir.create(file.path("testdir2", "testdir3"), recursive = TRUE)
unlink("testdir2")
unlink("testdir2", recursive = TRUE)
setwd(old.dir)
unlink("testdir", recursive = TRUE)
bye()
0/0
a <- NA
a + 2
swirl()
:20
1:20
pi:10
15:1
":"
`:`
?":"
seq(1, 20)
seq(0, 10, by = 0.5)
my_seq <- seq(5, 10 length = 30)
my_seq <- seq(5, 10, length = 30)
length(my_seq)
1:length(my_seq)
seq(along.with = my_seq)
seq_along(my_seq)
rep(0, times = 40)
rep(c(0, 1, 2))
rep(c(0, 1, 2), times = 19)
rep(c(0, 1, 2), times = 10)
rep(c(0,1,2), each = 10)
num_vect = c(0.5, 55, -10, 6)
info()
h
num_vect = c(0.5, 55, -10, 6)
num_vect = seq( 0.5, 55, -10, 6)
num_vect = c(0.5, 55, -10, 6)
num_vect <-  c(0.5, 55, -10, 6)
tf <- num_vect < 1
tf
num_vect >= 6
my_char = c("My", "name", "is")
my_char <- c("My", "name", "is")
my_char
paste(my_char, collapse = " ")
my_name <- c(my_char, "Saki")
my_name
paste(my_name, collapse = " ")
paste("Hello", "world!", sep = " ")
paste(1:3, c("X", "Y", "Z"), sep = "")
paste(LETTERS, 1:4, sep = "-")
info()
main()
bye()
update.packages(checkBuilt=TRUE, ask=FALSE)
update.packages(checkBuilt=TRUE, ask=FALSE)
swirl()
library(swirl)
library("swirl")
swirl()
bye()
update.packages(checkBuilt=TRUE, ask=FALSE)
update.packages(checkBuilt=TRUE, ask=FALSE)
swirl
library("swirl")
swirl()
c(44, NA, 5,NA)
x <- c(44, NA, 5,NA)
x * 3
y <- rnorm(1000)
z <- rep(NA, 1000)
my_data <- sample(c(y, z), 100)
is.na(my_data)
my_na <- is.na(my_data)
my_na
my_data == NA
sum(my_na)
my_data
0 / 0
Inf - Inf
x
x[1:10]
x[is.na(x)]
y <- x[!is.na(x)]
y
y[y>0]
x{x>0}
x{x>0]
x[x>0]
x[!is.na(x) & x > 0]
c(1,3,5,6)
c(3,5,7)
x[c(3,5,7)]
x[0]
x[3000]
x[c(-2, -10)]
x[-c(2, 10)]
vect <- c(foo = 11, bar = 2, norf = NA)
vect
names(vect)
vect2 <- c(11,2,NA)
names(vect2)
names(vect2) <- c("foo", "bar", "norf")
identical(vect,vect2)
vect["bar"]
vect[c("foo", "bar")]
my_vector = 1:20
my_vector <-  1:20
my_vector
dim(my_vector)
length(my_vector)
dim(my_vector) <- c(4,5)
dim(my_vector)
attributes(my_vector)
my_vector
class(my_vector)
my_matrix <- my_vector
?matrix()
?matrix
mu_matrix2 <- matrix(1:20, 4, 5)
my_matrix2 <- matrix(1:20, 4, 5)
my_matrix2 <- matrix(data = 1:20, row = 4, column = 5)
my_matrix2 <- matrix(data = 1:20, nrow = 4, ncol = 5)
my_matrix2 <- matrix(1:20, nrow = 4, ncol = 5)
my_matrix2 <- matrix(c(1:20), nrow = 4, ncol = 5)
View(mu_matrix2)
View(mu_matrix2)
View(my_matrix2)
info()
play()
nxt()
my_matrix2 <- matrix(1:20, 4, 5)
identical(my_matrix,my_matrix2)
patients <- c("Bill", "Gina", "Kelly", "Seanâ€œâ€?
s
â€œâ€?â€?)
"
c()
patients <- c("Bill", "Gina", "Kelly", "Sean")
cbind(patients,my_matrix)
my_data <- data.frame(patients, my_matrix)
my_data
class(my_data)
cnames <- c("patient", "age", "weight", "bp", "rating", "test")
colnames(my_data)
colnames(my_data) <- cnames
mydata
my_data
bye()
library("swirl")
swirl()
ls()
class(plants)
library(swirl)
rm(list = ls())
swirl()
info()
main()
library(swirl)
rm(list = ls())
swirl()
ls()
class(plants)
dim(plants)
nrow(plants)
ncol(plants)
object.size(plants)
names(plants)
head(plants)
head(plants, 10)
tail(plants, 15)
summart(plants)
summary(plants)
plants[plants$Active_Growth_Period]
table(plants$Active_Growth_Period)
str(my_data)
str(plants)
data(cars)
?cars
head(cars)
plot(cars)
?plot()
?plot
plot(x = cars$speed, y = cars$dist)
plot(x = cars$dist, y = cars$speed)
plot(x = cars$speed, y = cars$dist, xlab = "Speed")
plot(x = cars$speed, y = cars$dist, xlab = "Speed", ylab = "Stopping Distance")
plot(x = cars$speed, y = cars$dist, ylab = "Stopping Distance")
plot(x = cars$speed, y = cars$dist, xlab = "Speed", ylab = "Stopping Distance")
plot(cars, main = "My Plot")
plot(cars, sub = "My Plot Subtitle")
plot(cars, col = 2)
?par
plot(cars, xlim = c(10,15))
plot(cars, pch = 2)
data("mtcars")
data(mtcars)
play()
str(mtcars)
dim(cars)
head(cars)
head(mtcars)
nxt
nxt()
boxplot(mtcars)
?boxplot
boxplot(mtcars, mpg~cyl)
boxplot(data = mtcars, formula = mpg~cyl)
boxplot(x = mtcars, formula = mpg~cyl)
boxplot(mtcars, data = mtcars, formula = mpg~cyl)
boxplot(formula = mpg ~ cyl, data = mtcars)
hist(mtcars$mpg)
bye()
library(swirl)
rm(list = ls())
swirl()
?read.csv
mydf <- read.csv(path2csv, stringsAsFactors = FALSE)
dim(mydf)
head(mydf)
library(dplyr)
packageVersion("dplyr")
cran <- tbl_df(mydf)
rm("mydf")
tbl_df
cran
?select
select(cran, ip_id, package, country)
5:20
select(cran, r_arch:country)
select(cran, country:r_arch)
cran
select(cran, -time
)
-5:20
-(5:20)
select(-(5:20))
select(cran, -(5:20))
select(cran, -(X:size))
fillter(cran ,package == "swirl")
filter(cran, package == "swirl")
filter(cran, r_version == "3.1.1", country == "US")
?Comparison
filter(cran, r_version <= "3.0.2", country == "IN")
filter(cran, country == "US" | country == "IN")
filter(cran, size > 100500, r_os == "linux-gnu")
is.na(c(3, 5, NA, 10))
!is.na(c(3, 5, NA, 10))
filter(cran, !is.na(r_version))
select(cran2, size:ip_id)
cran2 = select(cran, size:ip_id)
cran2 <- select(cran, size:ip_id)
arrange(cran2, ip_id)
arrange(cran2, desc(ip_id))
arrange(cran2, package, ip_id)
arrange(cran2,  country, desc(r_version), ip_id)
cran3 <- select(ip_id, package, size)
cran3 <- select(cran, ip_id, package, size)
cran3
mutate(cran3, size_mb = size / 2^20)
mutate(cran3, size_gb = size_mb / 2^20)
mutate(cran3, size_gb = size_mb / 2^10)
cran3
mutate(cran3, size_mb = size / 2^20, size_gb = size_mb / 2^10)
mutate(cran3, correct_size = size + 1000)
summarize(cran, avg_bytes = mean(size))
library(swirl)
(2+8.5)/2
(8.5 - 2)^2/12
qqnorm(gaussian_rv)
uniform(0,1)
unif(0,1)
runif(n, min = 0, max = 1)
runif(n, min = 0, max = 1)
n = 1000
runif(n, min = 0, max = 1)
n = 1000
help qqline()
help(qqline())
help(qqline
0
help("qqline")
S = [0.28, 0.2, 0.01, 0.80, 0.1]
S <-  [0.28, 0.2, 0.01, 0.80, 0.1]
S <- {0.28, 0.2, 0.01, 0.80, 0.1}
S <- (0.28, 0.2, 0.01, 0.80, 0.1)
s = c(0.28, 0.2, 0.01, 0.80, 0.1)
qqline(s, distribution = qunif,  = "blue", lwd = 2)
qqline(s,distribution = qunif, col = "blue", lwd = 2)
help("distributino")
help("distribution")
qqline(s,distribution = dunif, col = "blue", lwd = 2)
qqline(s, distribution = dunif)
qqnorm(s)
qqline(s, distribution = dunif)
unif_rv = runif(n, min = 0, max = 1)
qqline(s, distribution = unif_rv)
qqline(s, distribution = dunif(n, min = 0, max = 1))
qqline(s, distribution = dunif(min = 0, max = 1))
help qqline
help("qqline")
ppline(s)
qqunif(s)
?qqnorm
?rt
runif
qqunif(s, distribution = runif(min = 0, max = 1))
qqplot(s, distribution = runif(min = 0, max = 1))
qqunif(s, distribution = runif
)
qqplot(s, distribution = runif)
?runif
runif(10,0,1)
qqplot(s, distribution = runif(10,0,1))
set.seed(10)
N <- 1000
B = rt(N,df=10)
C = rchisq(N,df=10)
op <- layout(matrix(c(1,2),ncol=2,nrow=1))
qqnorm(B,col='green',ylab='student')
qqline(B, col = 2)
qqnorm(C,col='blue',ylab=expression( chi^2 ))
qqline(C, col = 2)
qqline(s, distribution = runif)
dev.off()
n = 1000
unif_rv = runif(n, min = 0, max = 1)
qqnorm(unif_rv)
s = c(0.28, 0.2, 0.01, 0.80, 0.1)
qqnorm(s)
qqplot(s, distribution = runif)
qqline(s, distribution = runif)
qqnorm(s,col='green',ylab='S')
qqline(s, col = 2)
qqnorm(unif_rv,col='blue', ylab='unif(0,1)')
qqline(unif_rv, col = 2)
qqnorm(s,col='green',ylab='S')
qqline(s, col = 2)
qqnorm(unif_rv,col='blue', ylab='unif(0,1)')
qqline(unif_rv, col = 2)
qqnorm(s,col='green',ylab='S')
qqline(s, col = 2)
qqnorm(unif_rv,col='blue', ylab='unif(0,1)')
qqline(unif_rv, col = 2)
dev.off
dev.off()
qqnorm(s,col='green',ylab='S')
qqline(s, col = 2)
qqnorm(unif_rv,col='blue', ylab='unif(0,1)')
qqline(unif_rv, col = 2)
qqline(s, distribution = runif(0,1))
qqnorm(s,col='green',ylab='S')
qqline(s, col = 1)
qqnorm(unif_rv,col='blue', ylab='unif(0,1)')
qqline(unif_rv, col = 2)
op <- layout(matrix(c(1,2),ncol=2,nrow=1))
qqnorm(s,col='green',ylab='S')
qqline(s, col = 2)
qqnorm(unif_rv,col='blue', ylab='unif(0,1)')
qqline(unif_rv, col = 2)
plot(cars)
x <- [-5 0 2 3]
x <- {-5 0 2 3}
x <- {-5,0,2,3}
x <- c(-5,0,2,3)
y <- c(-10,3,11,14)
a = lm(x~y)
plot(a)
summary(a)
a
a = lm(y ~ x)
a
x <- c(-5,0,2,3)
y <- c(-10,3,11,14)
a = lm(y ~ x)
a
plot(a)
View(a)
x
a <- lm(y ~ x)
library("swirl")
swirl()
ã€‚ã€‚
..
cd ..
getwd()
setwd("D:\Study\Mooc\R")
setwd("D:\\Study\\Mooc\\R")
install_course_zip("14310x_Intro_to_R.zip",multi=FALSE)
install_course_zip("14_310x_Intro_to_R.zip",multi=FALSE)
swirl()
5 + 7
